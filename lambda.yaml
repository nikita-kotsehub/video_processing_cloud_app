AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ExportVpcStackName:
    Description: the name of the vpc stack
    Type: String
  LambdaName:
    Type: String
  BucketName:
    Type: String
    Default: "video-application-s3-bucket"
  
Resources:
  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref BucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags: 
        - Key: Name
          Value: S3 Bucket for storing video files 

  AppLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaName}"

  IamRoleLambdaExecution:
      Type: "AWS::IAM::Role"
      Properties:
        Path: "/"
        RoleName: !Sub "${LambdaName}-role"  
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Principal:
              Service:
              - "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
        ManagedPolicyArns: 
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
        Policies:
        - PolicyName: !Sub "${LambdaName}-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: "Allow"
              Action:
              - "logs:CreateLogStream"
              - "logs:CreateLogGroup"
              - "logs:PutLogEvents"
              Resource:
              - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${LambdaName}*:*"
        - PolicyName: !Sub "${LambdaName}-policy-s3-bucket"
          PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "s3:*"
                  Resource: 
                    - !Sub ${S3Bucket.Arn}/*

  MyLambda:
    Type: "AWS::Lambda::Function"
    Properties:
        Code:
          ZipFile: |
            def lambda_handler(event, context):
              message = 'Hello Lambda World!'
              return message
        Description: "Video App Test Lambda Function"
        Handler: index.lambda_handler
        PackageType: "Zip"
        Role: !GetAtt "IamRoleLambdaExecution.Arn"
        Runtime: python3.7
        Timeout: 60
        # VpcConfig:
        #     SecurityGroupIds:
        #     - Fn::ImportValue: !Sub ${ExportVpcStackName}-DataBaseSecurityGroup
        #     SubnetIds:
        #     - Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet1
        #     - Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet2
        #     - Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet3
        #     - Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet4

Outputs:
  S3BucketName:
    Description: Name of the S3 bucket
    Export:
      Name: !Sub ${AWS::StackName}-S3Bucket
    Value: !Ref S3Bucket